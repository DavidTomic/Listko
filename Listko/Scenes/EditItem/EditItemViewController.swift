//
//  EditItemViewController.swift
//  Listko
//
//  Created by David Tomic on 02/03/2018.
//  Copyright (c) 2018 Terminko. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EditItemDisplayLogic: class
{
  func displaySomething(viewModel: EditItem.Something.ViewModel)
}

class EditItemViewController: UIViewController, EditItemDisplayLogic
{
  var interactor: EditItemBusinessLogic?
  var router: (NSObjectProtocol & EditItemRoutingLogic & EditItemDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
  }
  
  private func disableLargeTitle() {
    if #available(iOS 11.0, *) {
      navigationItem.largeTitleDisplayMode = .never
    }
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = EditItem.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: EditItem.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}
