//
//  ShowGroceryViewController.swift
//  Listko
//
//  Created by David Tomic on 08/03/2018.
//  Copyright (c) 2018 Terminko. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowGroceryDisplayLogic: class
{
  func displaySomething(viewModel: ShowGrocery.GetList.ViewModel)
}

class ShowGroceryViewController: UIViewController, ShowGroceryDisplayLogic
{
  var interactor: ShowGroceryBusinessLogic?
  var router: (NSObjectProtocol & ShowGroceryRoutingLogic & ShowGroceryDataPassing)?

  let popupDismissAnimationController = PopupDismissAnimationController()
  var sections: [String] = []
  var displayItems = [String : [ShowGrocery.GetList.ViewModel.DisplayedListItem]]()
  
  
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
  }
  
  // MARK: Action
  
  @IBAction func cancel(_ sender: Any) {
    self.dismiss(animated: true, completion: nil)
  }
  
  @IBAction func close(_ sender: UIButton) {
    self.dismiss(animated: true, completion: nil)
  }
  
  
  func doSomething()
  {
    let request = ShowGrocery.GetList.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: ShowGrocery.GetList.ViewModel)
  {

  }
}
