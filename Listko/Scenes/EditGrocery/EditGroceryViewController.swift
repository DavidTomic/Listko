//
//  EditGroceryViewController.swift
//  Listko
//
//  Created by David Tomic on 02/03/2018.
//  Copyright (c) 2018 Terminko. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

protocol EditGroceryDisplayLogic: class
{
  func displayEditedGrocery(viewModel: EditGrocery.Edit.ViewModel)
}

class EditGroceryViewController: UIViewController, EditGroceryDisplayLogic
{
  var interactor: EditGroceryBusinessLogic?
  var router: (NSObjectProtocol & EditGroceryRoutingLogic & EditGroceryDataPassing)?

  // MARK: IBOutlet
  
  @IBOutlet weak var tfGroceryName: UITextField!
  @IBOutlet weak var tableView: UITableView!
  @IBOutlet weak var consToolbarBottom: NSLayoutConstraint!
  
  // MARK: Variables
  
  var sections: [String] = []
  var displayedItems = [String : [EditGrocery.DisplayedListItem]]()
  let disposeBag = DisposeBag() // used for Keyboard handling
  
  var isNewGroceryList: Bool {
    return interactor?.groceryList == nil
  }
  
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    setupTableView()
    disableLargeTitle()
    addKeyboardObserver()
    showGroceryListToEdit()
    showTfGroceryNameKeyboardIfIsNewGroceryList()
  }
  

  // MARK: Edit Grocery list
  
  func showGroceryListToEdit() {
    let request = EditGrocery.Edit.Request()
    interactor?.showGroceryListToEdit(request: request)
  }
  
  func displayEditedGrocery(viewModel: EditGrocery.Edit.ViewModel) {
    tfGroceryName.text = viewModel.groceryName
    sections = viewModel.sections
    displayedItems = viewModel.displayedListItems
    tableView.reloadData()
  }
  
  // MARK: Save Grocery list
  
  func saveGroceryList() {
    let request = EditGrocery.Save.Request()
    interactor?.saveGroceryList(request: request)
  }

}
