//
//  ListItemsViewController.swift
//  Listko
//
//  Created by David Tomic on 20/02/2018.
//  Copyright (c) 2018 Terminko. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwipeCellKit

protocol ListItemsDisplayLogic: class
{
  func displayListItems(viewModel: ListItems.Fetch.ViewModel)
}

class ListItemsViewController: ParentViewController, ListItemsDisplayLogic
{
  var interactor: ListItemsBusinessLogic?
  var router: (NSObjectProtocol & ListItemsRoutingLogic & ListItemsDataPassing)?
  
  let popupPresentAnimationController = PopupPresentAnimationController()
  let popupDismissAnimationController = PopupDismissAnimationController()

  var swipeOptions = SwipeTableOptions()
//{
//    var options = SwipeTableOptions()
//    options.transitionStyle = .border
//    options.buttonSpacing = 4
//    options.backgroundColor = #colorLiteral(red: 0.9467939734, green: 0.9468161464, blue: 0.9468042254, alpha: 1)
//    return options
//  }
  
  var displayItems: [ListItems.Fetch.ViewModel.DisplayedListItem] = []
  
  @IBOutlet weak var tableView: UITableView!
  
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    setupTableView()
    setLargeTextStyle()
    clearNavigationBarBackground()
    fetchListItems()
    //self.navigationController?.navigationBar.backIndicatorImage = #imageLiteral(resourceName: "back")
    //self.navigationController?.navigationBar.backIndicatorTransitionMaskImage = #imageLiteral(resourceName: "back")
//    // test
//    let p = Person()
//    p.name = "pero"
//    p.itemId = 33
//
//    let c1 = Car()
//    c1.itemId = 44
//    c1.name = "golf2"
//
//    let c2 = Car()
//    c2.itemId = 55
//    c2.name = "opel3"
//
//    p.cars.append(c1)
//    p.cars.append(c2)
//
//
//    try! App.realm.write {
//      App.realm.add(p)
//    }
    
    
//    let res = App.realm.objects(Person.self)
//    print("res \(res)")
//
//    print("res \(res[0].cars[0].name)")
    
    
    
//        try! App.realm.write {
//          App.realm.deleteAll()
//        }
    
    
    
    
    
//    let listItem = ListItem()
//    listItem.title = "Title Test"
//
//    let item = ListItem.Item()
//    //item.itemId = 2
//    item.name = "item test"
//    listItem.items = [item]
//
//    listItem.commit()
//
//    let results : SRKResultSet = ListItem.query().fetch()
//    print("results \(results)")
  }
  
  // MARK: Actions
  
  @IBAction func addListItem(_ sender: UIButton) {
    router?.routeToEditListItem(segue: nil)
  }
  
  
  // MARK: Methods
  
  private func fetchListItems()
  {
    let request = ListItems.Fetch.Request()
    interactor?.fetchListItems(request: request)
  }
  
  
  // MARK: Display
  
  func displayListItems(viewModel: ListItems.Fetch.ViewModel)
  {
    displayItems = viewModel.displayedListItem
    tableView.reloadData()
  }
}
