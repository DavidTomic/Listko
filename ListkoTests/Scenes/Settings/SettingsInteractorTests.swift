//
//  SettingsInteractorTests.swift
//  Listko
//
//  Created by David Tomic on 05/04/2018.
//  Copyright (c) 2018 Terminko. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Listko_dev
import XCTest

class SettingsInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: SettingsInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupSettingsInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupSettingsInteractor()
  {
    sut = SettingsInteractor()
  }
  
  // MARK: Test doubles
  
  class SettingsPresentationLogicSpy: SettingsPresentationLogic
  {
    var presentItemsCalled = false
    
    func presentItems(response: Settings.Get.Response)
    {
      presentItemsCalled = true
    }
  }
  
  // MARK: Tests
  
  func testOptionsShouldReturnAllAvailableOptions() {
    
    let allAvailableOptions = [
      "Prika≈æi cijene",
      "Upravljaj grupama"
    ]
  }
  
  func testShouldAskPresenterToPresentItems()
  {
    // Given
    let spy = SettingsPresentationLogicSpy()
    sut.presenter = spy
    let request = Settings.Get.Request()
    
    // When
    sut.getItems(request: request)
    
    // Then
    XCTAssertTrue(spy.presentItemsCalled, "getItems(request:) should ask the presenter to format items")
  }
}
